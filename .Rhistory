## risk factor data
bmi <- as.data.frame(read_sas(paste0(pathpref,'bmi.sas7bdat')))
bp <- as.data.frame(read_sas(paste0(pathpref,'bp.sas7bdat')))
labs <- as.data.frame(read_sas(paste0(pathpref,'labs.sas7bdat')))
lipid <- as.data.frame(read_sas(paste0(pathpref,'dyslipidemia.sas7bdat')))
diab <- as.data.frame(read_sas(paste0(pathpref,'diabetes.sas7bdat')))
smok <- as.data.frame(read_sas(paste0(pathpref,'smoking.sas7bdat')))
smok6 <- as.data.frame(read_sas(paste0(pathpref,'smoking_6months.sas7bdat')))
## menopause, parity, census
menop <- as.data.frame(read_sas(paste0(pathpref,'menopause.sas7bdat')))
parity <- as.data.frame(read_sas(paste0(pathpref,'parity.sas7bdat')))
census <- as.data.frame(read_sas(paste0(pathpref,'census.sas7bdat')))
# import CVD outcome data recevied on 5/1/2019
pathpref = 'Q:/HGREENLEE/Data Working/Pathways Heart Study/CVD outcome/2019-05-01/'
cvd <- as.data.frame(read_sas(paste0(pathpref,'cvd_outcomes_thruDec2018.sas7bdat')))
################################################################################
# Combine cases and controls data
# check missingness
png('case_missing.png', height=3.5, width = 2.5, unit='in', res=200)
gg_miss_var(cases, show_pct =TRUE) + labs(y = "% missing, Cases")
dev.off()
png('control_missing.png', height=3.5, width = 2.5, unit='in', res=200)
gg_miss_var(controls, show_pct =TRUE) + labs(y = "% missing, Controls")
dev.off()
# combine old and new cases data
cases$CVD_studyid <- cases$case_id
cases <- merge(cases, cases_new, by=names(cases_new)[names(cases_new) %in% names(cases)])
# stack cases and controls 1, matched on age and race/ethnicity
# change all variables to lower case
names(cases) <- tolower(names(cases))
names(controls1) <- tolower(names(controls1))
# reorder controls1 variable to be the same as cases
controls1$group <- 'Control'
controls1$dxage <- controls1$index_age
controls1[,names(cases)[!(names(cases) %in% names(controls1))]] <- NA
cases[,names(controls1)[!(names(controls1) %in% names(cases))]] <- NA
cases$group <- 'Case'
controls1 <- controls1[,names(cases)]
# combine cases and control data, n=89644
all <- rbind(cases, controls1)
## combine all data into a list
datalist <- list(all,
bmi1[,c("cvd_studyid","bmi_measure_date", "bmi_datediff", "bmi")],
bp1[,c("cvd_studyid","bp_measure_date", "bp_datediff","systolic","diastolic")],
labs2[,c("CVD_studyid","GLU_F","GTT75_PRE","HDL","HGBA1C","LDL_CLC_NS","TOT_CHOLES","TRIGL_NS" )],
diab[,c(1,4:10)],lipid[,2:4],
smok1[,c(2,5:8)],menop[,c(1,3)],parity[,c(1,5,6)],
census[,c(2,5:48)],
cvd2)
## make all var names lower case
datalist <- lapply(datalist,function(x){
names(x) <- tolower(names(x))
x
})
## merge all data by CVD_studyid
a1 <- Reduce(function(...) merge(...,by='cvd_studyid', all.x=T), datalist)
## set all NA for cvd outcomes as 0
a1[,124:133] <- lapply(a1[,124:133], function(x) {
x[is.na(x)] <- 0
x
})
################################################################################
# Create some more variables...
# recode categorical variables
# age groups
a1$agegrp <- cut(a1$dxage, c(0, 40, 50, 60, 70, 80, 101), right=F,
labels = c('<40 yo','40-49','50-59','60-69','70-79','80+ yo'))
# race
a1$raceethn1 <- factor(a1$raceethn1,
labels=c("WHITE","BLACK","ASIAN","HISPANIC","PI","AI-AN"))
# postive nodes
a1$nodal <- factor(a1$nodal, labels = c('Positive','Negative'))
# tumor markers
a1[,c('er','pr','her2')] <- lapply(a1[,c('er','pr','her2')], function(x)
factor(x, levels = c(0,1,2,3,8,9),
labels = c('Not done','Positive','Negative',
'Borderline','Ordered, N/A',
'Unknown')))
# erpr status
a1$erpr <- factor(a1$erpr, labels = c('ER+/PR+','ER+/PR-','ER-/PR+','ER-/PR-',
'UNKNOWN'))
# more tumor markers and treatment received
a1[,c('tri_neg','chemo_yn','rad_yn','horm_yn')] <-
lapply(a1[,c('tri_neg','chemo_yn','rad_yn','horm_yn')], function(x)
factor(x, levels = c(0,1,9),
labels = c('No','Yes','Other')))
# AJCC stage
a1$ajcc_stage <- factor(a1$ajcc_stage,
labels = c('Stage I','Stage II', 'Stage III','Stage IV'))
# convert dxdate to date
a1$dxdate <- as.Date(a1$dxdate, origin = '1970-01-01')
# enrolled in Pathways
a1$enrolled <- factor(a1$enrolled, levels = c(0,1), labels=c('No','Yes'))
# create index year
a1$index_yr <- format(a1$index_date,"%Y")
a1$index_yr[a1$index_yr %in% c('2005','2006','2007')] <- '2005-2007'
a1$index_yr[a1$index_yr %in% c('2008','2009','2010')] <- '2008-2010'
a1$index_yr[a1$index_yr %in% c('2011','2012','2013')] <- '2011-2013'
a1$index_yr <- factor(a1$index_yr)
# create enrollment length
a1$enr_len <- as.numeric((a1$enr_end - a1$enr_start)/30)
# BMI category
a1$bmicat <- cut(a1$bmi, c(0,18.5,25,30,35,Inf),right=F,
labels = c('Underweight','Normal','Overweight','Obese I','Obese II+'))
a1$bmicat <- as.character(a1$bmicat)
a1$bmicat[is.na(a1$bmicat)] <- 'Unknown'
a1$bmicat <- factor(a1$bmicat,
levels = c('Underweight','Normal','Overweight','Obese I','Obese II+','Unknown'))
# smoking status
a1$smok1 <- a1$tobacco_use
a1$smok1[a1$smok %in% c('P','Q')] <- 'Quited/past/former'
a1$smok1[a1$smok %in% c('Y')] <- 'Current smoker'
a1$smok1[a1$smok %in% c('N')] <- 'Never smoker'
a1$smok1[a1$smok %in% c('U')] <- 'Unknown'
a1$smok1[is.na(a1$smok)] <- 'Unknown'
a1$smok1 <- factor(a1$smok1, levels=c('Never smoker','Current smoker','Quited/past/former','Unknown'))
# menopausal status
a1$menop <- factor(a1$bl_meno_status)
a1$menop[is.na(a1$menop) & a1$dxage>51] <- '1'
a1$menop[is.na(a1$menop) & a1$dxage<=51] <- '0'
# gravidity
a1$gravid <- cut(as.numeric(a1$ob_gravidity), c(0,1,2,3,Inf),right=F,
labels = c('0','1','2','3+'))
a1$parity <- cut(as.numeric(a1$ob_parity), c(0,1,2,3,Inf),right=F,
labels = c('0','1','2','3+'))
# diabetes
a1[,c("inpatient_flg","outpatient_flg","pharmacy_flg","a1c_flg",
"fgrg_flg","a1cfgrg_flg")] <- lapply(a1[,c("inpatient_flg","outpatient_flg","pharmacy_flg","a1c_flg",
"fgrg_flg","a1cfgrg_flg")],
function(x){
x[is.na(x)] <- 2
x <- factor(x, levels=c(1,0,2),labels = c('Yes','No','Unknown'))
x
})
# dyslipidemia
a1$dyslipidemia.x[is.na(a1$dyslipidemia.x)] <- 0
a1$dyslipidemia.x <- factor(a1$dyslipidemia.x,levels=c(1,0),
labels = c('Yes','No/Unknown'))
# household income
a1$hhincome1 <- rowSums(a1[,c(96:104)], na.rm = T)
a1$hhincome2 <- rowSums(a1[,c(105:107)], na.rm = T)
a1$hhincome3 <- rowSums(a1[,c(108:111)], na.rm = T)
# education
a1$edu1 <- rowSums(a1[,c(70:72)], na.rm = T)
a1$edu2 <- rowSums(a1[,c(73:74)], na.rm = T)
a1$edu3 <- a1$education6
a1$edu4 <- rowSums(a1[,c(76:77)], na.rm = T)
# examine data distribution
source('Q:/HGREENLEE/Zaixing/Pathways Heart Study/pathwaysheart/1_analysis.R', echo=TRUE)
dev.off()
library(tidyverse)
library(haven)
library(ggplot2)
library(dplyr)
library(plyr)
library(naniar)
library(reshape2)
# import CVD outcome data recevied on 5/1/2019
pathpref = 'Q:/HGREENLEE/Data Working/Pathways Heart Study/CVD outcome/2019-05-16/'
cvd <- as.data.frame(read_sas(paste0(pathpref,'cvd_outcomes_12moprior_thruDec2018_15may19.sas7bdat')))
head(cvd)
library(tidyverse)
library(haven)
library(ggplot2)
library(dplyr)
library(plyr)
library(naniar)
library(reshape2)
str(cvd)
table(cvd$adate > cvd$index_date)
cvd2 <- dcast(data=cvd, CVD_STUDYID~group, value.var = 'adate', min,na.rm=T)
cvd2[,-1] <- lapply(cvd2[,-1], function(x) as.Date(x, origin='1970-01-01'))
cvd2[,-1] <- lapply(cvd2[,-1], function(x) as.Date(as.character(x)))
names(cvd2) <- gsub('/| ','_',names(cvd2))
cvd_grp <- names(cvd2)[-1]
names(cvd2)[-1] <- paste0(names(cvd2)[-1],'_dt')
cvd2[,cvd_grp] <- lapply(cvd2[,-1], function(x) ifelse(!is.na(x),1,0))
head(cvd2)
### condition
cvd3 <- dcast(data=cvd, CVD_STUDYID~CONDITION, value.var = 'adate', min,na.rm=T)
cvd3[,-1] <- lapply(cvd3[,-1], function(x) as.Date(x, origin='1970-01-01'))
cvd3[,-1] <- lapply(cvd3[,-1], function(x) as.Date(as.character(x)))
names(cvd3) <- gsub('/| ','_',names(cvd3))
cvd_cond <- names(cvd3)[-1]
names(cvd3)[-1] <- paste0(names(cvd3)[-1],'_dt')
cvd3[,cvd_cond] <- lapply(cvd3[,-1], function(x) ifelse(!is.na(x),1,0))
head(cvd3)
head(cvd2)
str(all)
cvd2 <- merge(cvd2, all[,c('index_date','cvd_studyid')], all.x=T)
names(cvd2)
names(cvd)
cvd2 <- dcast(data=cvd, CVD_STUDYID+index_date~group, value.var = 'adate', min,na.rm=T)
head(cvd2)
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(x, origin='1970-01-01'))
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(as.character(x)))
names(cvd2) <- gsub('/| ','_',names(cvd2))
cvd_grp <- names(cvd2)[-1:-2]
names(cvd2)[-1] <- paste0(names(cvd2)[-1:-2],'_dt')
names(cvd2)[-1:-2] <- paste0(names(cvd2)[-1:-2],'_dt')
head(cvd2)
names(cvd2)[-1:-2] <- paste0(names(cvd2)[-1:-2],'_dt')
head(cvd2)
## make long to wide format, keep 1st occurence of each condition only
### condition groups
cvd2 <- dcast(data=cvd, CVD_STUDYID+index_date~group, value.var = 'adate', min,na.rm=T)
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(x, origin='1970-01-01'))
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(as.character(x)))
names(cvd2) <- gsub('/| ','_',names(cvd2))
cvd_grp <- names(cvd2)[-1:-2]
names(cvd2)[-1:-2] <- paste0(names(cvd2)[-1:-2],'_dt')
head(cvd2)
cvd2[,cvd_grp] <- lapply(cvd2[,-1:-2], function(x) {
y <- ifelse(!is.na(x),1,0)
y[y==1 & x>cvd2$index_date] <- 2
y
})
head(cvd2)
lapply(cvd2[,cvd_grp], table)
## make long to wide format, keep 1st occurence of each condition only
### condition groups
cvd2 <- dcast(data=cvd, CVD_STUDYID+index_date~group, value.var = 'adate', min,na.rm=T)
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(x, origin='1970-01-01'))
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(as.character(x)))
names(cvd2) <- gsub('/| ','_',names(cvd2))
cvd_grp <- names(cvd2)[-1:-2]
names(cvd2)[-1:-2] <- paste0(names(cvd2)[-1:-2],'_dt')
cvd2[,cvd_grp] <- lapply(cvd2[,-1:-2], function(x) {
y <- ifelse(!is.na(x),1,0)
y[y==1 & x>cvd2$index_date] <- 2
y <- factor(y, levels=0:2, labels = c('No','Prevalent','Incident'))
y
})
sapply(cvd2[,cvd_grp], table)
t(sapply(cvd2[,cvd_grp], table))
4706/nrow(all)
cvd3 <- dcast(data=cvd, CVD_STUDYID+index_date~CONDITION, value.var = 'adate', min,na.rm=T)
cvd3[,-1:-2] <- lapply(cvd3[,-1:-2], function(x) as.Date(x, origin='1970-01-01'))
cvd3[,-1:-2] <- lapply(cvd3[,-1:-2], function(x) as.Date(as.character(x)))
names(cvd3) <- gsub('/| ','_',names(cvd3))
cvd_cond <- names(cvd3)[-1:-2]
names(cvd3)[-1:-2] <- paste0(names(cvd3)[-1:-2],'_dt')
head(cvd3)
cvd3[,cvd_cond] <- lapply(cvd3[,-1:-2],  function(x) {
y <- ifelse(!is.na(x),1,0)
y[y==1 & x>cvd2$index_date] <- 2
y <- factor(y, levels=0:2, labels = c('No','Prevalent','Incident'))
y
})
head(cvd3)
sapply(cvd3[,cvd_cond], table)
t(sapply(cvd3[,cvd_cond], table))
table(cvd$CONDITION)
cvd$CONDITION[cvd$CONDITION=='Percutaneous transluminal coronary angioplasty status'] <- 'Percutaneous transluminal coronary angioplasty'
cvd3 <- dcast(data=cvd, CVD_STUDYID+index_date~CONDITION, value.var = 'adate', min,na.rm=T)
cvd3[,-1:-2] <- lapply(cvd3[,-1:-2], function(x) as.Date(x, origin='1970-01-01'))
cvd3[,-1:-2] <- lapply(cvd3[,-1:-2], function(x) as.Date(as.character(x)))
names(cvd3) <- gsub('/| ','_',names(cvd3))
cvd_cond <- names(cvd3)[-1:-2]
names(cvd3)[-1:-2] <- paste0(names(cvd3)[-1:-2],'_dt')
cvd3[,cvd_cond] <- lapply(cvd3[,-1:-2],  function(x) {
y <- ifelse(!is.na(x),1,0)
y[y==1 & x>cvd2$index_date] <- 2
y <- factor(y, levels=0:2, labels = c('No','Prevalent','Incident'))
y
})
t(sapply(cvd3[,cvd_cond], table))
table(cvd$CONDITION)
cvd_cond
# export condition list
write.csv(cvd_grp,'cvd_grp.csv')
write.csv(cvd_cond,'cvd_cond.csv')
names(cvd2)
## combine all data into a list
datalist <- list(all,
bmi1[,c("cvd_studyid","bmi_measure_date", "bmi_datediff", "bmi")],
bp1[,c("cvd_studyid","bp_measure_date", "bp_datediff","systolic","diastolic")],
labs2[,c("CVD_studyid","GLU_F","GTT75_PRE","HDL","HGBA1C","LDL_CLC_NS","TOT_CHOLES","TRIGL_NS" )],
diab[,c(1,4:10)],lipid[,2:4],
smok1[,c(2,5:8)],menop[,c(1,3)],parity[,c(1,5,6)],
census[,c(2,5:48)],
cvd2[,-2])
## make all var names lower case
datalist <- lapply(datalist,function(x){
names(x) <- tolower(names(x))
x
})
## merge all data by CVD_studyid
a1 <- Reduce(function(...) merge(...,by='cvd_studyid', all.x=T), datalist)
## set all NA for cvd outcomes as 0
a1[,124:133] <- lapply(a1[,124:133], function(x) {
x[is.na(x)] <- 'No'
x
})
names(a1[,124:133])
cvd_grp
# recode categorical variables
# age groups
a1$agegrp <- cut(a1$dxage, c(0, 40, 50, 60, 70, 80, 101), right=F,
labels = c('<40 yo','40-49','50-59','60-69','70-79','80+ yo'))
# race
a1$raceethn1 <- factor(a1$raceethn1,
labels=c("WHITE","BLACK","ASIAN","HISPANIC","PI","AI-AN"))
# postive nodes
a1$nodal <- factor(a1$nodal, labels = c('Positive','Negative'))
# tumor markers
a1[,c('er','pr','her2')] <- lapply(a1[,c('er','pr','her2')], function(x)
factor(x, levels = c(0,1,2,3,8,9),
labels = c('Not done','Positive','Negative',
'Borderline','Ordered, N/A',
'Unknown')))
# erpr status
a1$erpr <- factor(a1$erpr, labels = c('ER+/PR+','ER+/PR-','ER-/PR+','ER-/PR-',
'UNKNOWN'))
# more tumor markers and treatment received
a1[,c('tri_neg','chemo_yn','rad_yn','horm_yn')] <-
lapply(a1[,c('tri_neg','chemo_yn','rad_yn','horm_yn')], function(x)
factor(x, levels = c(0,1,9),
labels = c('No','Yes','Other')))
# AJCC stage
a1$ajcc_stage <- factor(a1$ajcc_stage,
labels = c('Stage I','Stage II', 'Stage III','Stage IV'))
# convert dxdate to date
a1$dxdate <- as.Date(a1$dxdate, origin = '1970-01-01')
# enrolled in Pathways
a1$enrolled <- factor(a1$enrolled, levels = c(0,1), labels=c('No','Yes'))
# create index year
a1$index_yr <- format(a1$index_date,"%Y")
a1$index_yr[a1$index_yr %in% c('2005','2006','2007')] <- '2005-2007'
a1$index_yr[a1$index_yr %in% c('2008','2009','2010')] <- '2008-2010'
a1$index_yr[a1$index_yr %in% c('2011','2012','2013')] <- '2011-2013'
a1$index_yr <- factor(a1$index_yr)
# create enrollment length
a1$enr_len <- as.numeric((a1$enr_end - a1$enr_start)/30)
# BMI category
a1$bmicat <- cut(a1$bmi, c(0,18.5,25,30,35,Inf),right=F,
labels = c('Underweight','Normal','Overweight','Obese I','Obese II+'))
a1$bmicat <- as.character(a1$bmicat)
a1$bmicat[is.na(a1$bmicat)] <- 'Unknown'
a1$bmicat <- factor(a1$bmicat,
levels = c('Underweight','Normal','Overweight','Obese I','Obese II+','Unknown'))
# smoking status
a1$smok1 <- a1$tobacco_use
a1$smok1[a1$smok %in% c('P','Q')] <- 'Quited/past/former'
a1$smok1[a1$smok %in% c('Y')] <- 'Current smoker'
a1$smok1[a1$smok %in% c('N')] <- 'Never smoker'
a1$smok1[a1$smok %in% c('U')] <- 'Unknown'
a1$smok1[is.na(a1$smok)] <- 'Unknown'
a1$smok1 <- factor(a1$smok1, levels=c('Never smoker','Current smoker','Quited/past/former','Unknown'))
# menopausal status
a1$menop <- factor(a1$bl_meno_status)
a1$menop[is.na(a1$menop) & a1$dxage>51] <- '1'
a1$menop[is.na(a1$menop) & a1$dxage<=51] <- '0'
# gravidity
a1$gravid <- cut(as.numeric(a1$ob_gravidity), c(0,1,2,3,Inf),right=F,
labels = c('0','1','2','3+'))
a1$parity <- cut(as.numeric(a1$ob_parity), c(0,1,2,3,Inf),right=F,
labels = c('0','1','2','3+'))
# diabetes
a1[,c("inpatient_flg","outpatient_flg","pharmacy_flg","a1c_flg",
"fgrg_flg","a1cfgrg_flg")] <- lapply(a1[,c("inpatient_flg","outpatient_flg","pharmacy_flg","a1c_flg",
"fgrg_flg","a1cfgrg_flg")],
function(x){
x[is.na(x)] <- 2
x <- factor(x, levels=c(1,0,2),labels = c('Yes','No','Unknown'))
x
})
# dyslipidemia
a1$dyslipidemia.x[is.na(a1$dyslipidemia.x)] <- 0
a1$dyslipidemia.x <- factor(a1$dyslipidemia.x,levels=c(1,0),
labels = c('Yes','No/Unknown'))
# household income
a1$hhincome1 <- rowSums(a1[,c(96:104)], na.rm = T)
a1$hhincome2 <- rowSums(a1[,c(105:107)], na.rm = T)
a1$hhincome3 <- rowSums(a1[,c(108:111)], na.rm = T)
# education
a1$edu1 <- rowSums(a1[,c(70:72)], na.rm = T)
a1$edu2 <- rowSums(a1[,c(73:74)], na.rm = T)
a1$edu3 <- a1$education6
a1$edu4 <- rowSums(a1[,c(76:77)], na.rm = T)
library(tidyverse)
library(haven)
library(ggplot2)
library(dplyr)
library(plyr)
library(naniar)
library(reshape2)
str(control1)
str(control)
str(controls)
table(controls$case_id)
str(controls)
cvd_grp
cvd_cond
## make long to wide format, keep 1st occurence of each condition only
### condition groups
cvd2 <- dcast(data=cvd, CVD_STUDYID+index_date~group, value.var = 'adate', min,na.rm=T)
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(x, origin='1970-01-01'))
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(as.character(x)))
names(cvd2) <- gsub('/| ','_',names(cvd2))
cvd_grp <- paste0(names(cvd2)[-1:-2],'_grp')
names(cvd2)[-1:-2] <- paste0(names(cvd2)[-1:-2],'_dt')
cvd2[,cvd_grp] <- lapply(cvd2[,-1:-2], function(x) {
y <- ifelse(!is.na(x),1,0)
y[y==1 & x>cvd2$index_date] <- 2
y <- factor(y, levels=0:2, labels = c('No','Prevalent','Incident'))
y
})
write.csv(cvd_grp,'cvd_grp.csv')
cvd_grp
datalist <- list(all,
bmi1[,c("cvd_studyid","bmi_measure_date", "bmi_datediff", "bmi")],
bp1[,c("cvd_studyid","bp_measure_date", "bp_datediff","systolic","diastolic")],
labs2[,c("CVD_studyid","GLU_F","GTT75_PRE","HDL","HGBA1C","LDL_CLC_NS","TOT_CHOLES","TRIGL_NS" )],
diab[,c(1,4:10)],lipid[,2:4],
smok1[,c(2,5:8)],menop[,c(1,3)],parity[,c(1,5,6)],
census[,c(2,5:48)],
cvd2[,-2],
cvd3[,-2])
## make all var names lower case
datalist <- lapply(datalist,function(x){
names(x) <- tolower(names(x))
x
})
a1 <- Reduce(function(...) merge(...,by='cvd_studyid', all.x=T), datalist)
names(a1)
cvd2 <- dcast(data=cvd, CVD_STUDYID+index_date~group, value.var = 'adate', min,na.rm=T)
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(x, origin='1970-01-01'))
cvd2[,-1:-2] <- lapply(cvd2[,-1:-2], function(x) as.Date(as.character(x)))
names(cvd2) <- gsub('/| ','_',names(cvd2))
cvd_grp <- paste0(names(cvd2)[-1:-2],'_grp')
names(cvd2)[-1:-2] <- paste0(cvd_grp,'_dt')
cvd2[,cvd_grp] <- lapply(cvd2[,-1:-2], function(x) {
y <- ifelse(!is.na(x),1,0)
y[y==1 & x>cvd2$index_date] <- 2
y <- factor(y, levels=0:2, labels = c('No','Prevalent','Incident'))
y
})
cvd_grp
## combine all data into a list
datalist <- list(all,
bmi1[,c("cvd_studyid","bmi_measure_date", "bmi_datediff", "bmi")],
bp1[,c("cvd_studyid","bp_measure_date", "bp_datediff","systolic","diastolic")],
labs2[,c("CVD_studyid","GLU_F","GTT75_PRE","HDL","HGBA1C","LDL_CLC_NS","TOT_CHOLES","TRIGL_NS" )],
diab[,c(1,4:10)],lipid[,2:4],
smok1[,c(2,5:8)],menop[,c(1,3)],parity[,c(1,5,6)],
census[,c(2,5:48)],
cvd2[,-2],
cvd3[,-2])
## make all var names lower case
datalist <- lapply(datalist,function(x){
names(x) <- tolower(names(x))
x
})
## merge all data by CVD_studyid
a1 <- Reduce(function(...) merge(...,by='cvd_studyid', all.x=T), datalist)
names(a1)
a1[,c(124:133,158:181)] <- lapply(a1[,c(124:133,158:181)], function(x) {
x[is.na(x)] <- 'No'
x
})
tab1('arrhythmia_grp')
table(a1$group)
tab1('cardiomyopathy_heart_failure_grp')
tab1('venous_thromboembolic_disease_grp')
names(a1[,c(124:133,158:181)])
cvdvars <-names(a1[,c(124:133,158:181)])
cvdvars
cvd_grp
paste0(cvdvars,'_p')
a1[,paste0(cvdvars,'_p')] <- lapply(a1[,cvdvars], function(x){
y <- ifelse(x=='Prevalent','Yes','No')
y
})
sapply(a1[,paste0(cvdvars,'_p')])
sapply(a1[,paste0(cvdvars,'_p')], table)
a1[,paste0(cvdvars,'_p')] <- lapply(a1[,cvdvars], function(x){
y <- factor(ifelse(x=='Prevalent','Yes','No'))
y
})
sapply(a1[,paste0(cvdvars,'_p')], table)
a1[,paste0(cvdvars,'_p')] <- lapply(a1[,cvdvars], function(x){
y <- factor(ifelse(x=='Prevalent','Yes','No'), levels=c('Yes','No'))
y
})
sapply(a1[,paste0(cvdvars,'_p')], table)
a1[,paste0(cvdvars,'_i')] <- lapply(a1[,cvdvars], function(x){
y <- factor(ifelse(x=='Incident','Yes','No'), levels=c('Yes','No'))
y
})
sapply(a1[,paste0(cvdvars,'_i')], table)
table1_cvd <- do.call(rbind,lapply(c(paste0(cvdvars,'_p'),
paste0(cvdvars,'_i')),tab1))
warnings()
table1_cvd
table1_cvd <- cbind(row.names(table1_cvd), table1_cvd)
table1_cvd
write.csv(table1_cvd, 'table 1 cvd.csv')
str(table1_cvd)
table1_cvd <- do.call(rbind,lapply(c(paste0(cvdvars,'_p'),
paste0(cvdvars,'_i')),tab1))
table1_cvd <- data.frame(cbind(row.names(table1_cvd), table1_cvd))
table1_cvd
write.csv(table1_cvd[table1_cvd$V1=='Yes',], 'table 1 cvd.csv')
tab1('aortocoronary_bypass_status_convert_i')
c(paste0(cvdvars,'_p'),
paste0(cvdvars,'_i'))
table1_cvd <- do.call(rbind,lapply(c(paste0(cvdvars,'_p'),
paste0(cvdvars,'_i')),tab1))
table1_cvd <- data.frame(cbind(row.names(table1_cvd), table1_cvd))
table1_cvd
write.csv(table1_cvd[table1_cvd$V1=='Yes',], 'table 1 cvd.csv')
